try {
	var p2 = require('./node_modules/p2/build/p2.js');
  var objects_storage = {};
} catch(err) {
}

var convert_to_physics = function(w) {
  // do any conversions to create the bodies or whatever
  return w;
}

var convert_to_wppl = function(w) {
  // grab velocities and positions
  return w;
}

var is1d = function(p) {
  return _.keys(p).length == 0;
}

var coords = function(pos) {
  if (is1d(pos)) {
    return {x: pos, y: 0};
  } else {
    return pos;
  }
}

var setup_physics = function(w, result_index) {
  result_index = result_index || 0;

  // Init p2.js
  objects_storage["world" + result_index] = new p2.World({
    gravity: [0, 0]
  });
  objects_storage["world" + result_index].applyDamping = false;

  var object_names = _.keys(w);

  // console.log(ball_names);
  for (var i = 0; i < object_names.length; i++) {
    var name = object_names[i];
    if (name.length == 1) {
      var shape = "ball" + name + "Shape" + result_index;
      var body = "ball" + name + "Body" + result_index;
      objects_storage[shape] = new p2.Circle({radius: 1});
      var pos = coords(w[name]["position"]);
      var v = coords(w[name]["velocity"]);
      objects_storage[body] = new p2.Body({
        id: name,
        mass: 1,
        position: [pos.x, pos.y],
        velocity: [v.x, v.y],
      });
      objects_storage[body].addShape(objects_storage[shape]);
      objects_storage["world" + result_index].addBody(objects_storage[body]);
    } else if (name == "block_A" || name=="block_B") {
      // blocks might be "DNE" or "exists"
      var y_pos;
      if (w[name] == "exists") {
        y_pos = name=="block_A" ? 8 : -8;
      } else {
        y_pos = name=="block_A" ? 10060 : 10080;
      }
      // blocks might be "DNE" or "exists". if the block exists, it will stop the corresponding ball
      var shape = name + "Shape" + result_index;
      var body = name + "Body" + result_index;
      objects_storage[shape] = new p2.Box({width: 1, height: 5});
      var pos = {x: 20, y: y_pos};
      var v = {x: 0, y: 0};
      objects_storage[body] = new p2.Body({
        id: name,
        position: [pos.x, pos.y],
        velocity: [v.x, v.y],
      });
      objects_storage[body].addShape(objects_storage[shape]);
      objects_storage["world" + result_index].addBody(objects_storage[body]);
    }
  }


  objects_storage["floor" + result_index] = new p2.Body({
    position: [-50, -14],
  });
  objects_storage["floor" + result_index].addShape(new p2.Plane());
  objects_storage["world" + result_index].addBody(objects_storage["floor" + result_index]);

  objects_storage["ceiling" + result_index] = new p2.Body({
    angle: Math.PI,
    position: [-50, 14],
  });
  objects_storage["ceiling" + result_index].addShape(new p2.Plane());
  objects_storage["world" + result_index].addBody(objects_storage["ceiling" + result_index]);



  objects_storage["lower" + result_index] = new p2.Body({
    position: [-24.5, -9]
  });
  objects_storage["lower" + result_index].addShape(new p2.Box({
    width: 1, height: 10
  }));
  objects_storage["world" + result_index].addBody(objects_storage["lower" + result_index]);

  objects_storage["upper" + result_index] = new p2.Body({
    position: [-24.5, 9]
  });
  objects_storage["upper" + result_index].addShape(new p2.Box({
    width: 1, height: 10
  }));
  objects_storage["world" + result_index].addBody(objects_storage["upper" + result_index]);


  // ceiling.addShape(new p2.Plane());
  // var left = new p2.Body({
  //   angle: (3 * Math.PI) / 2
  // });

  // left.addShape(new p2.Plane());

  // // Add a box
  // boxShape = new p2.Box({ width: 2, height: 1 });
  // boxBody = new p2.Body({
  //     mass:1,
  //     position:[0,2],
  //     angularVelocity:1
  // });
  // boxBody.addShape(boxShape);
  // world.addBody(boxBody);

  return objects_storage["world" + result_index];
}

// var run_physics_engine = function(w) {
// 	return w;
// }

try{ 
	module.exports = {
		// run_physics_engine: run_physics_engine,
    setup_physics: setup_physics
	}
} catch(err) {
}