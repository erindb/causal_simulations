try {
	var p2 = require('./node_modules/p2/build/p2.js');
  var objects_storage = {};
} catch(err) {
}

var convert_to_physics = function(w) {
  // do any conversions to create the bodies or whatever
  return w;
}

var convert_to_wppl = function(w) {
  // grab velocities and positions
  return w;
}

var is1d = function(p) {
  return _.keys(p).length == 0;
}

var coords = function(pos) {
  if (is1d(pos)) {
    return {x: pos, y: 0};
  } else {
    return pos;
  }
}

var setup_physics = function(w, result_index) {
  result_index = result_index || 0;

  // Init p2.js
  objects_storage["world" + result_index] = new p2.World({
    gravity: [0, 0]
  });
  objects_storage["world" + result_index].applyDamping = false;

  var ball_names = _.keys(w);
  for (var i = 0; i < ball_names.length; i++) {
    var name = ball_names[i];
    var shape = "ball" + name + "Shape" + result_index;
    var body = "ball" + name + "Body" + result_index;
    objects_storage[shape] = new p2.Circle({width: 2, height: 1});
    var pos = coords(w[name]["position"]);
    var v = coords(w[name]["velocity"]);
    objects_storage[body] = new p2.Body({
      id: name,
      mass: 1,
      position: [pos.x*4-2, pos.y],
      velocity: [10*v.x, v.y]
    });
    objects_storage[body].addShape(objects_storage[shape]);
    objects_storage["world" + result_index].addBody(objects_storage[body]);
  }

  // // Add a box
  // boxShape = new p2.Box({ width: 2, height: 1 });
  // boxBody = new p2.Body({
  //     mass:1,
  //     position:[0,2],
  //     angularVelocity:1
  // });
  // boxBody.addShape(boxShape);
  // world.addBody(boxBody);

  return objects_storage["world" + result_index];
}

var run_physics_engine = function(w) {
	return w;
}

try{ 
	module.exports = {
		run_physics_engine: run_physics_engine,
    setup_physics: setup_physics
	}
} catch(err) {
}