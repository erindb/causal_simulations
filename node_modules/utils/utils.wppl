

var foreach = function(lst, fn) {
  var foreach_ = function(i) {
      if (i < lst.length) {
          fn(lst[i]);
          foreach_(i + 1);
      }
  };
  foreach_(0);
};
var displayObj = function(x) {
display(JSON.stringify(x, undefined, 2));
};
var discretizedUniform = function(a, b, nbins) {
var width = b-a;
var width_per_step = width/(nbins-1);
return randomInteger(nbins)*width_per_step + a;
};
var factor_meaning = function(meaning) {
factor(Math.log(meaning));
};
var clone = function(x) {
return JSON.parse(JSON.stringify(x));
};
var extend = function(a, b) {
return _.extend(clone(a), b);
};
var safe_infer = function(args, f) {
var erp = Infer(args, f);
var possible = reduce(function(x, acc) {
  if (x.prob > 0 || x.factor > -Infinity) {
      return true;
    }
  return acc;
}, false, erp.support());
if (possible) {
  return Infer(args, function() {
    var x = sample(erp);
    if (x.prob != null) {
      factor(Math.log(x.prob));
    } else if (x.factor != null) {
      factor(x.factor);
    }
    return x.result;
  });
} else {
  return "Impossible";
}
};

var marginal = function(erp) {
  return Infer({method: "enumerate"}, function() {
    var x = sample(erp);
    return x.utterance;
  });
}